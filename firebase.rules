rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for clarity
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwnerOfProfile(profileId) {
      return isSignedIn() && request.auth.uid == profileId;
    }

    // A user can only read and write their own profile
    match /profiles/{profileId} {
      allow read, write: if isOwnerOfProfile(profileId);
    }

    // Rules for SOS events
    match /sos_events/{eventId} {
      // Any signed-in user can create an SOS event.
      // The user_uid will be set by the Cloud Function.
      allow create: if isSignedIn();

      // An event can be read by its owner or by a member of the circle it was sent to.
      allow read: if isOwner(resource.data.user_uid) ||
                   exists(/databases/$(database)/documents/circles/$(resource.data.circle_id)/members/$(request.auth.uid));

      // An event can only be updated by its owner, and only to mark it as 'resolved'.
      allow update: if isOwner(resource.data.user_uid) &&
                     request.resource.data.status == 'resolved' &&
                     resource.data.status == 'active';
    }

    // A user can manage their own push subscriptions
    match /push_subscriptions/{subId} {
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.user_uid;
    }

    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}